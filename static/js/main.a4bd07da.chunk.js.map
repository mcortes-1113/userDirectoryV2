{"version":3,"sources":["components/NavBar/index.js","components/Container/index.js","components/Row/index.js","components/Col/index.js","pages/Home.js","components/Sort/index.js","components/Filter/index.js","components/Card/index.js","components/EmployeeList/index.js","pages/EmployeeDir.js","App.js","serviceWorker.js","index.js"],"names":["NavTabs","className","to","window","location","pathname","Container","props","Row","fluid","Col","size","split","map","join","Home","NavBar","src","alt","width","height","SortBy","type","onClick","sorted","concat","Employees","sort","a","b","lastName","console","log","FilterBy","style","marginRight","InactiveEmployees","filter","i","active","activeEmployees","EmployeeCard","id","image","firstName","department","EmployeeList","useState","employeeList","employee","Directory","Sort","Filter","color","App","exact","path","component","EmployeeDir","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4bd07da.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavTabs() {\r\n    return (\r\n        <ul className=\"nav nav-tabs\">\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/\" className={window.location.pathname === \"/\"\r\n                    ? \"nav-link active\" : \"nav-link\"}>\r\n                    Home\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/directory\" className={window.location.pathname === \"/directory\"\r\n                    ? \"nav-link active\" : \"nav-link\"}>\r\n                    Employee directory\r\n                </Link>                        \r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default NavTabs;\r\n","import React from \"react\";\r\n// import \"./style.css\";\r\n\r\n// function Container() {\r\n//   return <main className=\"container\" />;\r\n\r\nfunction Container(props) {\r\n  return <main className=\"container\" {...props} />;\r\n}\r\n\r\nexport default Container;","import React from \"react\";\r\n\r\n// function Row() {\r\n//   return <div className=\"row\" />;\r\n// }\r\n\r\nfunction Row(props) {\r\n    return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\r\n  }\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\n\r\nfunction Col(props) {\r\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\r\n\r\n  return <div className={size} {...props} />;\r\n}\r\n\r\nexport default Col;\r\n","import React from 'react';\r\n// import { Link } from \"react-router-dom\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport Container from \"../components/Container\";\r\nimport Row from \"../components/Row\";\r\nimport Col from \"../components/Col\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n                <Container>\r\n                    <Row>\r\n                        <Col size=\"md-2\">\r\n                            <img\r\n                                src={\"ImageAssets/directory.png\"}\r\n                                alt=\"directory\"\r\n                                width=\"150\"\r\n                                height=\"150px\"\r\n                            />\r\n                        </Col>\r\n                            <Col size=\"md-6\">\r\n                                <h1 className=\"text-center\">Welcome</h1>\r\n                                    <h3 className=\"text-center\">\r\n                                    Please use the link on the top of the page to navigate to the Employee Directory\r\n                                    </h3>\r\n                            </Col>\r\n                    </Row>\r\n                </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport Employees from \"../../Employees.json\";\r\n// import EmployeeList from \"../EmployeeList\";\r\nimport Directory from \"../../pages/EmployeeDir.js\";\r\n\r\nfunction SortBy() {\r\n\r\n  function sort() {\r\n    const sorted = [].concat(Employees) \r\n      .sort((a, b) => (a.lastName > b.lastName) ? 1 : -1);\r\n      console.log(sorted);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    {/* <button type=\"button\" className=\"btn btn-info\" onClick</div>)>Sort by First Name</button> */}\r\n    <button type=\"button\" className=\"btn btn-info\" onClick = { sort } >Sort by Last Name</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortBy;","import React from \"react\";\r\nimport Employees from \"../../Employees.json\";\r\n\r\nfunction FilterBy() {\r\n\r\n  function filterInactive() {\r\n    var InactiveEmployees = Employees.filter(function (i) {\r\n      return i.active === \"No\";\r\n    })\r\n      console.log(InactiveEmployees);\r\n}\r\n\r\n  function filterActive() {\r\n    var activeEmployees = Employees.filter(function (i) {\r\n      return i.active === \"Yes\";\r\n    })\r\n    console.log(activeEmployees);\r\n}\r\n\r\n  return (\r\n    <div>\r\n    <button type=\"button\" className=\"btn btn-light\" style={{marginRight: \"10px\"}} onClick = { filterInactive }>Show Inactive Employees Only</button>\r\n    <button type=\"button\" className=\"btn btn-light\" onClick = { filterActive }>Show Active Employees Only</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterBy;","import React from \"react\";\r\n// import \"./style.css\";\r\n\r\nfunction EmployeeCard(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <img alt={props.id} src={props.image} width={\"100px\"} height={\"100px\"} />\r\n      </div>\r\n      <div className=\"content\">\r\n        <ul>\r\n          <li>\r\n            <strong>First Name:</strong> {props.firstName}\r\n          </li>\r\n          <li>\r\n            <strong>Last Name:</strong> {props.lastName}\r\n          </li>\r\n          <li>\r\n            <strong>Department:</strong> {props.department}\r\n          </li>\r\n          <li>\r\n            <strong>Active Status:</strong> {props.active}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeCard;\r\n","import React, { useState } from 'react';\r\nimport EmployeeCard from \"../Card\";\r\nimport Employees from \"../../Employees.json\";\r\nimport Row from \"../Row\";\r\nimport Col from \"../Col\";\r\n\r\nfunction EmployeeList() {\r\n\r\n    const [employeeList, setEmployeeList] = useState(Employees);\r\n\r\n    // function sort() {\r\n    //     console.log(\"sort\");\r\n    //     const sorted = [].concat(employeeList) \r\n    //       .sort((a, b) => (a.lastName > b.lastName) ? 1 : -1);\r\n    //       console.log(sorted);\r\n    //   }\r\n\r\nreturn (\r\n\r\nemployeeList.map(employee => (\r\n\r\n    <Row>\r\n        <Col size=\"md-12\">\r\n            <EmployeeCard\r\n                image={employee.image}\r\n                id={employee.id}\r\n                firstName={employee.firstName}\r\n                lastName={employee.lastName}\r\n                department={employee.department}\r\n                active={employee.active}\r\n            />\r\n        </Col>\r\n    </Row>\r\n)) )                                    \r\n };\r\n\r\nexport default EmployeeList;","import React from 'react';\r\n// import { Link } from \"react-router-dom\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport Container from \"../components/Container\";\r\nimport Row from \"../components/Row\";\r\nimport Col from \"../components/Col\";\r\n// import Employees from \"../Employees.json\";\r\nimport SortBy from \"../components/Sort\";\r\nimport FilterBy from \"../components/Filter\";\r\nimport EmployeeList from '../components/EmployeeList';\r\n// import EmployeeCard from \"../components/Card\";\r\n\r\nfunction Directory() {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n                <Container>\r\n                    <Row>\r\n                    <Col size=\"md-2\">\r\n                        <img\r\n                            src={\"ImageAssets/directory.png\"}\r\n                            alt=\"directory\"\r\n                            width=\"75px\"\r\n                            height=\"75px\"\r\n                        />\r\n                    </Col>\r\n                        <Col size=\"md-10\">\r\n                            <h1>Employee Directory</h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                        <Row>\r\n                            <Col size=\"md-12\">\r\n                                <SortBy /><br />\r\n                                <FilterBy /><br />\r\n                                <h6 style={{color: \"red\"}}>***Button function only work on console log for now***</h6><br />\r\n                            </Col>\r\n                        </Row>\r\n                            <EmployeeList />\r\n                </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Directory;","import React from 'react';\nimport {BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport EmployeeDir from \"./pages/EmployeeDir\";\nimport './App.css';\n// import logo from './logo.svg';\n\n\nfunction App() {\n  return (\n\n    <Router>\n      <div>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/directory\" component={EmployeeDir} />\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}